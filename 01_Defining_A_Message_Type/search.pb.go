// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

/*
Package search is a generated protocol buffer package.

It is generated from these files:
	search.proto

It has these top-level messages:
	SearchRequest
*/
package search

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SearchRequest_Corpus int32

const (
	SearchRequest_UNIVERSAL SearchRequest_Corpus = 0
	SearchRequest_WEB       SearchRequest_Corpus = 1
	SearchRequest_IMAGES    SearchRequest_Corpus = 2
	SearchRequest_LOCAL     SearchRequest_Corpus = 3
	SearchRequest_NEWS      SearchRequest_Corpus = 4
	SearchRequest_PRODUCTS  SearchRequest_Corpus = 5
	SearchRequest_VIDEO     SearchRequest_Corpus = 6
)

var SearchRequest_Corpus_name = map[int32]string{
	0: "UNIVERSAL",
	1: "WEB",
	2: "IMAGES",
	3: "LOCAL",
	4: "NEWS",
	5: "PRODUCTS",
	6: "VIDEO",
}
var SearchRequest_Corpus_value = map[string]int32{
	"UNIVERSAL": 0,
	"WEB":       1,
	"IMAGES":    2,
	"LOCAL":     3,
	"NEWS":      4,
	"PRODUCTS":  5,
	"VIDEO":     6,
}

func (x SearchRequest_Corpus) String() string {
	return proto.EnumName(SearchRequest_Corpus_name, int32(x))
}
func (SearchRequest_Corpus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type SearchRequest struct {
	Query         string               `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	PageNumber    int32                `protobuf:"varint,2,opt,name=page_number,json=pageNumber" json:"page_number,omitempty"`
	ResultPerPage int32                `protobuf:"varint,3,opt,name=result_per_page,json=resultPerPage" json:"result_per_page,omitempty"`
	DoubleVal     float64              `protobuf:"fixed64,4,opt,name=doubleVal" json:"doubleVal,omitempty"`
	FloatVal      float32              `protobuf:"fixed32,5,opt,name=floatVal" json:"floatVal,omitempty"`
	Int64Val      int64                `protobuf:"varint,6,opt,name=int64Val" json:"int64Val,omitempty"`
	Uint32Val     uint32               `protobuf:"varint,7,opt,name=uint32Val" json:"uint32Val,omitempty"`
	Uint64Val     uint64               `protobuf:"varint,8,opt,name=uint64Val" json:"uint64Val,omitempty"`
	Sint32Val     int32                `protobuf:"zigzag32,9,opt,name=sint32Val" json:"sint32Val,omitempty"`
	Sint64Val     int64                `protobuf:"zigzag64,10,opt,name=sint64Val" json:"sint64Val,omitempty"`
	Fixed32Val    uint32               `protobuf:"fixed32,11,opt,name=fixed32Val" json:"fixed32Val,omitempty"`
	Fixed64Val    uint64               `protobuf:"fixed64,12,opt,name=fixed64Val" json:"fixed64Val,omitempty"`
	Sfixed32Val   int32                `protobuf:"fixed32,13,opt,name=sfixed32Val" json:"sfixed32Val,omitempty"`
	Sfixed64Val   int64                `protobuf:"fixed64,14,opt,name=sfixed64Val" json:"sfixed64Val,omitempty"`
	BoolVal       bool                 `protobuf:"varint,15,opt,name=boolVal" json:"boolVal,omitempty"`
	BytesVal      []byte               `protobuf:"bytes,16,opt,name=bytesVal,proto3" json:"bytesVal,omitempty"`
	Corpus        SearchRequest_Corpus `protobuf:"varint,17,opt,name=corpus,enum=SearchRequest_Corpus" json:"corpus,omitempty"`
}

func (m *SearchRequest) Reset()                    { *m = SearchRequest{} }
func (m *SearchRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRequest) ProtoMessage()               {}
func (*SearchRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *SearchRequest) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

func (m *SearchRequest) GetDoubleVal() float64 {
	if m != nil {
		return m.DoubleVal
	}
	return 0
}

func (m *SearchRequest) GetFloatVal() float32 {
	if m != nil {
		return m.FloatVal
	}
	return 0
}

func (m *SearchRequest) GetInt64Val() int64 {
	if m != nil {
		return m.Int64Val
	}
	return 0
}

func (m *SearchRequest) GetUint32Val() uint32 {
	if m != nil {
		return m.Uint32Val
	}
	return 0
}

func (m *SearchRequest) GetUint64Val() uint64 {
	if m != nil {
		return m.Uint64Val
	}
	return 0
}

func (m *SearchRequest) GetSint32Val() int32 {
	if m != nil {
		return m.Sint32Val
	}
	return 0
}

func (m *SearchRequest) GetSint64Val() int64 {
	if m != nil {
		return m.Sint64Val
	}
	return 0
}

func (m *SearchRequest) GetFixed32Val() uint32 {
	if m != nil {
		return m.Fixed32Val
	}
	return 0
}

func (m *SearchRequest) GetFixed64Val() uint64 {
	if m != nil {
		return m.Fixed64Val
	}
	return 0
}

func (m *SearchRequest) GetSfixed32Val() int32 {
	if m != nil {
		return m.Sfixed32Val
	}
	return 0
}

func (m *SearchRequest) GetSfixed64Val() int64 {
	if m != nil {
		return m.Sfixed64Val
	}
	return 0
}

func (m *SearchRequest) GetBoolVal() bool {
	if m != nil {
		return m.BoolVal
	}
	return false
}

func (m *SearchRequest) GetBytesVal() []byte {
	if m != nil {
		return m.BytesVal
	}
	return nil
}

func (m *SearchRequest) GetCorpus() SearchRequest_Corpus {
	if m != nil {
		return m.Corpus
	}
	return SearchRequest_UNIVERSAL
}

func init() {
	proto.RegisterType((*SearchRequest)(nil), "SearchRequest")
	proto.RegisterEnum("SearchRequest_Corpus", SearchRequest_Corpus_name, SearchRequest_Corpus_value)
}

func init() { proto.RegisterFile("search.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xcf, 0x6b, 0xdb, 0x40,
	0x10, 0x85, 0x3b, 0xb6, 0x25, 0x4b, 0x63, 0x2b, 0xde, 0x2c, 0x2d, 0x88, 0x52, 0xda, 0x21, 0x87,
	0xb2, 0x97, 0xfa, 0x90, 0x94, 0xde, 0x5d, 0x47, 0x14, 0x83, 0x6b, 0x9b, 0x51, 0xe3, 0x40, 0x2f,
	0x46, 0x4a, 0x36, 0xa9, 0x41, 0xb5, 0x1c, 0xfd, 0x80, 0xe6, 0xd8, 0xff, 0xbc, 0xac, 0x54, 0x4b,
	0xca, 0xf1, 0x7d, 0xdf, 0x7b, 0x73, 0x58, 0x16, 0xc7, 0xb9, 0x8e, 0xb2, 0xbb, 0x5f, 0xd3, 0x63,
	0x96, 0x16, 0xe9, 0xc5, 0x5f, 0x0b, 0xbd, 0xb0, 0x02, 0xac, 0x9f, 0x4a, 0x9d, 0x17, 0xf2, 0x35,
	0x5a, 0x4f, 0xa5, 0xce, 0x9e, 0x7d, 0x20, 0x50, 0x2e, 0xd7, 0x41, 0x7e, 0xc0, 0xd1, 0x31, 0x7a,
	0xd4, 0xbb, 0x43, 0xf9, 0x3b, 0xd6, 0x99, 0xdf, 0x23, 0x50, 0x16, 0xa3, 0x41, 0xab, 0x8a, 0xc8,
	0x8f, 0x38, 0xc9, 0x74, 0x5e, 0x26, 0xc5, 0xee, 0xa8, 0xb3, 0x9d, 0x11, 0x7e, 0xbf, 0x2a, 0x79,
	0x35, 0xde, 0xe8, 0x6c, 0x13, 0x3d, 0x6a, 0xf9, 0x0e, 0xdd, 0xfb, 0xb4, 0x8c, 0x13, 0xbd, 0x8d,
	0x12, 0x7f, 0x40, 0xa0, 0x80, 0x5b, 0x20, 0xdf, 0xa2, 0xf3, 0x90, 0xa4, 0x51, 0x61, 0xa4, 0x45,
	0xa0, 0x7a, 0xdc, 0x64, 0xe3, 0xf6, 0x87, 0xe2, 0xcb, 0x67, 0xe3, 0x6c, 0x02, 0xd5, 0xe7, 0x26,
	0x9b, 0xab, 0xe5, 0xfe, 0x50, 0x5c, 0x5d, 0x1a, 0x39, 0x24, 0x50, 0x1e, 0xb7, 0xe0, 0x64, 0xeb,
	0xa9, 0x43, 0xa0, 0x06, 0xdc, 0x02, 0x63, 0xf3, 0x66, 0xeb, 0x12, 0xa8, 0x73, 0x6e, 0xc1, 0xc9,
	0xd6, 0x5b, 0x24, 0x50, 0x92, 0x5b, 0x20, 0xdf, 0x23, 0x3e, 0xec, 0xff, 0xe8, 0xfb, 0x7a, 0x3c,
	0x22, 0x50, 0x43, 0xee, 0x90, 0xc6, 0xd7, 0xf3, 0x31, 0x81, 0xb2, 0xb9, 0x43, 0x24, 0xe1, 0x28,
	0xef, 0x1c, 0xf0, 0x08, 0xd4, 0x84, 0xbb, 0xa8, 0x6d, 0xd4, 0x27, 0xce, 0x08, 0x94, 0xe0, 0x2e,
	0x92, 0x3e, 0x0e, 0xe3, 0x34, 0x4d, 0x8c, 0x9d, 0x10, 0x28, 0x87, 0x4f, 0xd1, 0xbc, 0x58, 0xfc,
	0x5c, 0xe8, 0xdc, 0x28, 0x41, 0xa0, 0xc6, 0xdc, 0x64, 0xf9, 0x09, 0xed, 0xbb, 0x34, 0x3b, 0x96,
	0xb9, 0x7f, 0x4e, 0xa0, 0xce, 0x2e, 0xdf, 0x4c, 0x5f, 0x7c, 0x83, 0xe9, 0xbc, 0x92, 0xfc, 0xbf,
	0x74, 0xf1, 0x13, 0xed, 0x9a, 0x48, 0x0f, 0xdd, 0x9b, 0xd5, 0x62, 0x1b, 0x70, 0x38, 0x5b, 0x8a,
	0x57, 0x72, 0x88, 0xfd, 0xdb, 0xe0, 0xab, 0x00, 0x89, 0x68, 0x2f, 0xbe, 0xcf, 0xbe, 0x05, 0xa1,
	0xe8, 0x49, 0x17, 0xad, 0xe5, 0x7a, 0x3e, 0x5b, 0x8a, 0xbe, 0x74, 0x70, 0xb0, 0x0a, 0x6e, 0x43,
	0x31, 0x90, 0x63, 0x74, 0x36, 0xbc, 0xbe, 0xbe, 0x99, 0xff, 0x08, 0x85, 0x65, 0x2a, 0xdb, 0xc5,
	0x75, 0xb0, 0x16, 0x76, 0x6c, 0x57, 0x5f, 0xf1, 0xea, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd8,
	0xa4, 0x5d, 0x62, 0x9a, 0x02, 0x00, 0x00,
}
